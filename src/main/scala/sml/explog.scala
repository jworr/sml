package sml

import java.util.UUID

import sml.io.join

/**
A library to store the results of experiments
*/
object explog
{

	class Logger(path:String, redirect:Boolean, noLog:Boolean)
	{
		val id = UUID.randomUUID.toString

		/**
		Returns the logger's directory
		*/
		def directory: String = join(path, id)

		/**
		Creates the experiment's database entry
		*/
		def createExp(expName:String, expComment:String)
		{
		}

		/**
		Logs the experiments parameters
		*/
		def logParams(params:Map[String,String])
		{
		}

		/**
		Logs the experiments results
		*/

		/**
		Logs the any error generated by the experiment
		*/

		/**
		Logs a model created by the experiment
		*/
		//TODO

		/**
		Mark the starting time of the experiment
		*/

		/**
		Mark the ending time of the experiment
		*/

		/**
		Close the database connection and cleans up
		*/

		/**
		Writes out the metadata for the experiment
		*/

		/**
		Redirects standard out and standard error
		*/

		/**
		Refurinishes both standard out and standard error
		*/

	}

	/**
	Starts and experiment and returns a logger
	*/
	def startExp(path:String, expName:String, expComment:String, params:Map[String,String], redirect:Boolean, groupId:Int, noLog:Boolean): Logger =
	{
		null
		//create the logger

		//if we are logging
			
			//initialize the database

			//create the experiment

			//log the params

			//mark the start of the experiment
	}

	def initSchema()
	{
	}
}
